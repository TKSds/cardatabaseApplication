{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\carfront\\\\src\\\\components\\\\Carlist.js\";\nimport React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { CSVLink } from \"react-csv\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { SERVER_URL } from \"../constants.js\";\nimport AddCar from \"./AddCar.js\";\n\nclass Carlist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchCars = () => {\n      fetch(SERVER_URL + \"api/cars\").then(response => response.json()).then(responseData => {\n        this.setState({\n          cars: responseData._embedded.cars\n        });\n      }).catch(err => console.error(err));\n    };\n\n    this.confirmDelete = link => {\n      confirmAlert({\n        message: \"Are you sure you want to delete car?\",\n        buttons: [{\n          label: \"Yes\",\n          onClick: () => this.onDelClick(link)\n        }, {\n          label: \"No\"\n        }]\n      });\n    };\n\n    this.addCar = car => {\n      fetch(SERVER_URL + \"api/cars\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(car)\n      }).then(res => this.fetchCars()).catch(err => console.error(err));\n    };\n\n    this.renderEditable = cellInfo => {\n      return React.createElement(\"div\", {\n        style: {\n          background: \"#fafafa\"\n        },\n        contentEditable: true,\n        suppressContentEditableWarning: true,\n        onBlur: e => {\n          const data = [...this.state.cars];\n          data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n          this.setState({\n            cars: data\n          });\n        },\n        dangerouslySetInnerHTML: {\n          __html: this.state.cars[cellInfo.index][cellInfo.column.id]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    };\n\n    this.onDelClick = link => {\n      fetch(link, {\n        method: \"DELETE\"\n      }).then(res => {\n        this.setState({\n          open: true,\n          message: \"Car deleted\"\n        });\n        this.fetchCars();\n      }).catch(err => {\n        this.setState({\n          open: true,\n          message: \"Error when deleting\"\n        });\n        console.error(err);\n      });\n    };\n\n    this.handleClose = (event, reason) => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      cars: [],\n      open: false,\n      message: \"\"\n    };\n  }\n\n  // Update car\n  updateCar(car, link) {\n    fetch(link, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(car)\n    }).then(res => this.setState({\n      open: true,\n      message: \"Changes saved\"\n    })).catch(err => this.setState({\n      open: true,\n      message: \"Error when saving\"\n    }));\n  }\n\n  componentDidMount() {\n    this.fetchCars();\n  }\n\n  render() {\n    const columns = [{\n      Header: \"Brand\",\n      accessor: \"brand\",\n      Cell: this.renderEditable\n    }, {\n      Header: \"Model\",\n      accessor: \"model\",\n      Cell: this.renderEditable\n    }, {\n      Header: \"Color\",\n      accessor: \"color\",\n      Cell: this.renderEditable\n    }, {\n      Header: \"Year\",\n      accessor: \"year\",\n      Cell: this.renderEditable\n    }, {\n      Header: \"Price â‚¬\",\n      accessor: \"price\",\n      Cell: this.renderEditable\n    }, {\n      id: \"savebutton\",\n      sortable: false,\n      filterable: false,\n      width: 100,\n      accessor: \"_links.self.href\",\n      Cell: ({\n        value,\n        row\n      }) => React.createElement(Button, {\n        size: \"small\",\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: () => {\n          this.updateCar(row, value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Save\")\n    }, {\n      id: \"delbutton\",\n      sortable: false,\n      filterable: false,\n      width: 100,\n      accessor: \"_links.self.href\",\n      Cell: ({\n        value\n      }) => React.createElement(Button, {\n        size: \"small\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        onClick: () => {\n          this.confirmDelete(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Delete\")\n    }];\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(AddCar, {\n      addCar: this.addCar,\n      fetchCars: this.fetchCars,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      style: {\n        padding: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(CSVLink, {\n      data: this.state.cars,\n      separator: \";\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Export CSV\"))), React.createElement(ReactTable, {\n      data: this.state.cars,\n      columns: columns,\n      filterable: true,\n      pageSize: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(Snackbar, {\n      style: {\n        width: 300,\n        color: \"green\"\n      },\n      open: this.state.open,\n      onClose: this.handleClose,\n      autoHideDuration: 1500,\n      message: this.state.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Carlist;","map":{"version":3,"sources":["D:\\projects\\carfront\\src\\components\\Carlist.js"],"names":["React","Component","ReactTable","Snackbar","confirmAlert","CSVLink","Button","Grid","SERVER_URL","AddCar","Carlist","constructor","props","fetchCars","fetch","then","response","json","responseData","setState","cars","_embedded","catch","err","console","error","confirmDelete","link","message","buttons","label","onClick","onDelClick","addCar","car","method","headers","body","JSON","stringify","res","renderEditable","cellInfo","background","e","data","state","index","column","id","target","innerHTML","__html","open","handleClose","event","reason","updateCar","componentDidMount","render","columns","Header","accessor","Cell","sortable","filterable","width","value","row","padding","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { SERVER_URL } from \"../constants.js\";\r\nimport AddCar from \"./AddCar.js\";\r\n\r\nclass Carlist extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { cars: [], open: false, message: \"\" };\r\n  }\r\n\r\n  fetchCars = () => {\r\n    fetch(SERVER_URL + \"api/cars\")\r\n      .then(response => response.json())\r\n      .then(responseData => {\r\n        this.setState({\r\n          cars: responseData._embedded.cars\r\n        });\r\n      })\r\n\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  confirmDelete = link => {\r\n    confirmAlert({\r\n      message: \"Are you sure you want to delete car?\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => this.onDelClick(link)\r\n        },\r\n        {\r\n          label: \"No\"\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  // Add new car\r\n  addCar = car => {\r\n    fetch(SERVER_URL + \"api/cars\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(car)\r\n    })\r\n      .then(res => this.fetchCars())\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  //render edit\r\n  renderEditable = cellInfo => {\r\n    return (\r\n      <div\r\n        style={{ background: \"#fafafa\" }}\r\n        contentEditable\r\n        suppressContentEditableWarning\r\n        onBlur={e => {\r\n          const data = [...this.state.cars];\r\n          data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\r\n          this.setState({ cars: data });\r\n        }}\r\n        dangerouslySetInnerHTML={{\r\n          __html: this.state.cars[cellInfo.index][cellInfo.column.id]\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  // Delete car\r\n  onDelClick = link => {\r\n    fetch(link, { method: \"DELETE\" })\r\n      .then(res => {\r\n        this.setState({ open: true, message: \"Car deleted\" });\r\n        this.fetchCars();\r\n      })\r\n      .catch(err => {\r\n        this.setState({ open: true, message: \"Error when deleting\" });\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  // Update car\r\n  updateCar(car, link) {\r\n    fetch(link, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(car)\r\n    })\r\n      .then(res => this.setState({ open: true, message: \"Changes saved\" }))\r\n      .catch(err =>\r\n        this.setState({ open: true, message: \"Error when saving\" })\r\n      );\r\n  }\r\n\r\n  handleClose = (event, reason) => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchCars();\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        Header: \"Brand\",\r\n        accessor: \"brand\",\r\n        Cell: this.renderEditable\r\n      },\r\n      {\r\n        Header: \"Model\",\r\n        accessor: \"model\",\r\n        Cell: this.renderEditable\r\n      },\r\n      {\r\n        Header: \"Color\",\r\n        accessor: \"color\",\r\n        Cell: this.renderEditable\r\n      },\r\n      {\r\n        Header: \"Year\",\r\n        accessor: \"year\",\r\n        Cell: this.renderEditable\r\n      },\r\n      {\r\n        Header: \"Price â‚¬\",\r\n        accessor: \"price\",\r\n        Cell: this.renderEditable\r\n      },\r\n      {\r\n        id: \"savebutton\",\r\n        sortable: false,\r\n        filterable: false,\r\n        width: 100,\r\n        accessor: \"_links.self.href\",\r\n        Cell: ({ value, row }) => (\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              this.updateCar(row, value);\r\n            }}\r\n          >\r\n            Save\r\n          </Button>\r\n        )\r\n      },\r\n      {\r\n        id: \"delbutton\",\r\n        sortable: false,\r\n        filterable: false,\r\n        width: 100,\r\n        accessor: \"_links.self.href\",\r\n        Cell: ({ value }) => (\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              this.confirmDelete(value);\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Grid container>\r\n          <Grid item>\r\n            <AddCar addCar={this.addCar} fetchCars={this.fetchCars} />\r\n          </Grid>\r\n          <Grid item style={{ padding: 20 }}>\r\n            <CSVLink data={this.state.cars} separator=\";\">\r\n              Export CSV\r\n            </CSVLink>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <ReactTable\r\n          data={this.state.cars}\r\n          columns={columns}\r\n          filterable={true}\r\n          pageSize={10}\r\n        />\r\n        <Snackbar\r\n          style={{ width: 300, color: \"green\" }}\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          autoHideDuration={1500}\r\n          message={this.state.message}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Carlist;\r\n"]},"metadata":{},"sourceType":"module"}