{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\carfront\\\\src\\\\components\\\\Carlist.js\";\nimport React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { SERVER_URL } from \"../constants.js\";\nimport AddCar from \"./AddCar.js\";\n\nclass Carlist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchCars = () => {\n      fetch(SERVER_URL + \"api/cars\").then(response => response.json()).then(responseData => {\n        this.setState({\n          cars: responseData._embedded.cars\n        });\n      }).catch(err => console.error(err));\n    };\n\n    this.confirmDelete = link => {\n      confirmAlert({\n        message: \"Are you sure you want to delete car?\",\n        buttons: [{\n          label: \"Yes\",\n          onClick: () => this.onDelClick(link)\n        }, {\n          label: \"No\"\n        }]\n      });\n    };\n\n    this.onDelClick = link => {\n      fetch(link, {\n        method: \"DELETE\"\n      }).then(res => {\n        toast.success(\"Car deleted\", {\n          position: toast.POSITION.BOTTOM_LEFT\n        });\n        this.fetchCars();\n      }).catch(err => {\n        toast.error(\"Error when deleting\", {\n          position: toast.POSITION.BOTTOM_LEFT\n        });\n        console.error(err);\n      });\n    };\n\n    this.addCar = car => {\n      fetch(SERVER_URL + \"api/cars\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(car)\n      }).then(res => this.fetchCars()).catch(err => console.error(err));\n    };\n\n    this.renderEditable = cellInfo => {\n      return React.createElement(\"div\", {\n        style: {\n          background: \"#fafafa\"\n        },\n        contentEditable: true,\n        suppressContentEditableWarning: true,\n        onBlur: e => {\n          const data = [...this.state.cars];\n          data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n          this.setState({\n            cars: data\n          });\n        },\n        dangerouslySetInnerHTML: {\n          __html: this.state.cars[cellInfo.index][cellInfo.column.id]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      });\n    };\n\n    this.updateCar = (car, link) => {\n      fetch(link, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(car)\n      }).then(res => toast.success(\"Changes saved\", {\n        position: toast.position.BOTTOM_LEFT\n      })).catch(err => toast.error(\"Error when saving\", {\n        position: toast.position.BOTTOM_LEFT\n      }));\n    };\n\n    this.state = {\n      cars: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCars();\n  }\n\n  render() {\n    const columns = [{\n      Header: \"Brand\",\n      accessor: \"brand\",\n      Cell: this.renderEditable\n    }, {\n      Header: \"Model\",\n      accessor: \"model\",\n      Cell: this.renderEditable\n    }, {\n      Header: \"Color\",\n      accessor: \"color\",\n      Cell: this.renderEditable\n    }, {\n      Header: \"Year\",\n      accessor: \"year\",\n      Cell: this.renderEditable\n    }, {\n      Header: \"Price â‚¬\",\n      accessor: \"price\",\n      Cell: this.renderEditable\n    }, {\n      id: \"delbutton\",\n      sortable: false,\n      filterable: false,\n      width: 100,\n      accessor: \"_links.self.href\",\n      Cell: ({\n        value\n      }) => React.createElement(\"button\", {\n        onClick: () => {\n          this.confirmDelete(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Delete\")\n    }];\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(AddCar, {\n      addCar: this.addCar,\n      fetchCars: this.fetchCars,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(ReactTable, {\n      data: this.state.cars,\n      columns: columns,\n      filterable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(ToastContainer, {\n      autoClose: 1500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Carlist;","map":{"version":3,"sources":["D:\\projects\\carfront\\src\\components\\Carlist.js"],"names":["React","Component","ReactTable","ToastContainer","toast","confirmAlert","SERVER_URL","AddCar","Carlist","constructor","props","fetchCars","fetch","then","response","json","responseData","setState","cars","_embedded","catch","err","console","error","confirmDelete","link","message","buttons","label","onClick","onDelClick","method","res","success","position","POSITION","BOTTOM_LEFT","addCar","car","headers","body","JSON","stringify","renderEditable","cellInfo","background","e","data","state","index","column","id","target","innerHTML","__html","updateCar","componentDidMount","render","columns","Header","accessor","Cell","sortable","filterable","width","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { SERVER_URL } from \"../constants.js\";\r\nimport AddCar from \"./AddCar.js\";\r\n\r\nclass Carlist extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { cars: [] };\r\n  }\r\n\r\n  fetchCars = () => {\r\n    fetch(SERVER_URL + \"api/cars\")\r\n      .then(response => response.json())\r\n      .then(responseData => {\r\n        this.setState({\r\n          cars: responseData._embedded.cars\r\n        });\r\n      })\r\n\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  confirmDelete = link => {\r\n    confirmAlert({\r\n      message: \"Are you sure you want to delete car?\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => this.onDelClick(link)\r\n        },\r\n        {\r\n          label: \"No\"\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onDelClick = link => {\r\n    fetch(link, { method: \"DELETE\" })\r\n      .then(res => {\r\n        toast.success(\"Car deleted\", {\r\n          position: toast.POSITION.BOTTOM_LEFT\r\n        });\r\n        this.fetchCars();\r\n      })\r\n      .catch(err => {\r\n        toast.error(\"Error when deleting\", {\r\n          position: toast.POSITION.BOTTOM_LEFT\r\n        });\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  // Add new car\r\n  addCar = car => {\r\n    fetch(SERVER_URL + \"api/cars\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(car)\r\n    })\r\n      .then(res => this.fetchCars())\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  //render edit\r\n  renderEditable = cellInfo => {\r\n    return (\r\n      <div\r\n        style={{ background: \"#fafafa\" }}\r\n        contentEditable\r\n        suppressContentEditableWarning\r\n        onBlur={e => {\r\n          const data = [...this.state.cars];\r\n          data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\r\n          this.setState({ cars: data });\r\n        }}\r\n        dangerouslySetInnerHTML={{\r\n          __html: this.state.cars[cellInfo.index][cellInfo.column.id]\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  // Update car\r\n  updateCar = (car, link) => {\r\n    fetch(link, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(car)\r\n    })\r\n      .then(res =>\r\n        toast.success(\"Changes saved\", {\r\n          position: toast.position.BOTTOM_LEFT\r\n        })\r\n      )\r\n      .catch(err =>\r\n        toast.error(\"Error when saving\", {\r\n          position: toast.position.BOTTOM_LEFT\r\n        })\r\n      );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchCars();\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        Header: \"Brand\",\r\n        accessor: \"brand\",\r\n        Cell: this.renderEditable\r\n      },\r\n      {\r\n        Header: \"Model\",\r\n        accessor: \"model\",\r\n        Cell: this.renderEditable\r\n      },\r\n      {\r\n        Header: \"Color\",\r\n        accessor: \"color\",\r\n        Cell: this.renderEditable\r\n      },\r\n      {\r\n        Header: \"Year\",\r\n        accessor: \"year\",\r\n        Cell: this.renderEditable\r\n      },\r\n      {\r\n        Header: \"Price â‚¬\",\r\n        accessor: \"price\",\r\n        Cell: this.renderEditable\r\n      },\r\n      {\r\n        id: \"delbutton\",\r\n        sortable: false,\r\n        filterable: false,\r\n        width: 100,\r\n        accessor: \"_links.self.href\",\r\n        Cell: ({ value }) => (\r\n          <button\r\n            onClick={() => {\r\n              this.confirmDelete(value);\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <AddCar addCar={this.addCar} fetchCars={this.fetchCars} />\r\n        <ReactTable\r\n          data={this.state.cars}\r\n          columns={columns}\r\n          filterable={true}\r\n        />\r\n        <ToastContainer autoClose={1500} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Carlist;\r\n"]},"metadata":{},"sourceType":"module"}